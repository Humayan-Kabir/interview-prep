class Solution {
public:
    string findReplaceString(string s, vector<int>& indices, vector<string>& sources, vector<string>& targets) {
        int len = s.length();
        unordered_map<int, int> hashmap;
        for(int i = 0; i < indices.size(); i++) {
            int matched = true;
            for(int j = 0, k = indices[i]; j < sources[i].length(); j++, k++) {
                if (k >= len || s[k] != sources[i][j]) {
                    matched = false;
                    break;
                }
            }
            if (matched) {
                hashmap[indices[i]] = i;
            }
        }
        string ans = "";
        for(int i = 0; i < len; i++) {
            if (hashmap.find(i) != hashmap.end()) {
                int idx = hashmap[i];
                ans += targets[idx];
                i += sources[idx].length() - 1;
            } else {
                ans += s[i];
            }
        }
        return ans;
    }
};